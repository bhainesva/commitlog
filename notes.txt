TODO:
general:
error page when job fails

backend:
more algorithms to generate good test orders
simplify testing flow
get rid of files that are just package/import declarations after pruning

frontend:

Notes:
doesn't handle:
if x := funcWithSideEffect(); x {
    // do somethiing
}
we delete the whole block. I think it's fine, in most case having the condition floating
by itself would just be confusing

tests frequently 'cover' a lot of code that isn't particularly relevant to the specific test
everything runs even if you don't care about it. you can split stuff out into a function, but
unless it's guarded by an if statement it doesn't help much

thought just deleting uncovered lines would be enough but it wasn't because of how the weird { } cases
work.

I don't understand dst
	r := decorator.NewRestorer()
	r.Fprint(fi, ntree)

is good but
	r = decorator.NewRestorer()
	newast, err := r.RestoreFile(newtree)
	fatalIf(err)
	err = printer.Fprint(fi, token.NewFileSet(), newast)
fucks the comments

why do you get null things from the astmap when the input  isn't nil?

